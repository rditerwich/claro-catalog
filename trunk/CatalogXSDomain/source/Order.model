root /packages:AgileXS/packages:Domain/packages

import Metaphor.PIM.Archetypes.CrmArchetype
import Metaphor.PIM.Domain.Attribute
import Metaphor.PIM.Domain.Class
import Metaphor.PIM.Domain.Enumeration
import Metaphor.PIM.Domain.Literal
import Metaphor.PIM.Domain.Operation
import Metaphor.PIM.Domain.Package
import Metaphor.PIM.Domain.Parameter

path primitive = /packages:Metaphor/packages:PIM/packages:Domain/types
path catalog = /packages:AgileXS/packages:Domain/packages:Catalog/types
path shop = /packages:AgileXS/packages:Domain/packages:Shop/types
path output = /packages:AgileXS/packages:Domain/packages:Output/types
path order = /packages:AgileXS/packages:Domain/packages:Order/types
path party = /packages:AgileXS/packages:Domain/packages:Party/types

Package {
    name = Order
    types = {
        Class {
            name = Order
            attributes = {
                Attribute {
                    name = orderDate
                    type = primitive:Date
                }
                Attribute {
                    name = productOrders
                    type = order:ProductOrder
                    lower = 1
                    upper = {}
                    isComposite = true
                    opposite = order:ProductOrder/attributes:order
                }
                Attribute {
                    name = deliveryAddress
                    type = party:Address
                    lower = 0
                }
                Attribute {
                    name = transport
                    type = order:Transport
                    isComposite = true
                }
                Attribute {
                    name = user
                    type = party:User
                }
                Attribute {
                    name = status
                    type = order:OrderStatus
                }
                Attribute {
                    name = amountPaid
                    type = primitive:Money
                }
                Attribute {
                    name = history
                    type = order:OrderHistory
                    lower = 0
                    upper = {}
                    isComposite = true
                }
            }
            
        }
        Class {
            name = ProductOrder
            attributes = {
                Attribute {
                    name = product
                    type = catalog:Product
                }
                Attribute {
                    name = promotion
                    type = shop:Promotion
                    lower = 0
                }
                Attribute {
                    name = volume
                    type = primitive:Integer
                }
                Attribute {
                    name = price
                    type = primitive:Money 
                }
                Attribute {
                    name = priceCurrency
                    type = primitive:String
                }
                Attribute {
                    name = order
                    type = order:Order
                    opposite = order:Order/attributes:productOrders
                }
            }
        }
        Class {
            name = Transport
            attributes = {
                Attribute {
                    name = desciption
                    type = primitive:String
                }
                Attribute {
                    name = transportCompany
                    type = primitive:String
                }
                @comment "Delivery time in days"
                Attribute {
                    name = deliveryTime
                    type = primitive:Integer
                }
            }
        }
        Class {
            name = OrderHistory
            attributes = {
                Attribute {
                    name = user
                    type = party:User
                }
                Attribute {
                    name = newStatus
                    type = order:OrderStatus
                }
                Attribute {
                    name = comment
                    type = primitive:String
                }
                Attribute {
                    name = date
                    type = primitive:Date 
                }
            }
        }
        Enumeration {
            name = OrderStatus
            literals = {
                Literal {
                    name = InShoppingCart
                }
                Literal {
                    name = PendingPayment 
                }
                Literal {
                    name = ReceivedPayment 
                }
                Literal {
                    name = Processing 
                }
                Literal {
                    name = Shipped 
                }
                Literal {
                    name = OnHold 
                }
                Literal {
                    name = Complete 
                }
                Literal {
                    name = Closed 
                }
                Literal {
                    name = Canceled 
                }
            }
        }
    }
}
 