root /packages:Claro/packages:Domain/packages

import Metaphor.PIM.Archetypes.CrmArchetype
import Metaphor.PIM.Domain.Attribute
import Metaphor.PIM.Domain.Class
import Metaphor.PIM.Domain.Enumeration
import Metaphor.PIM.Domain.Literal
import Metaphor.PIM.Domain.Operation
import Metaphor.PIM.Domain.Package
import Metaphor.PIM.Domain.Parameter

path primitive = /packages:Metaphor/packages:PIM/packages:Domain/types
path catalog = /packages:Claro/packages:Domain/packages:Catalog/types
path jobs = /packages:Claro/packages:Domain/packages:Jobs/types
path party = /packages:Claro/packages:Domain/packages:Party/types

Package {
    name = Jobs
    types = {
        Class {
            name = Job
            attributes = {
                Attribute {
                    name = name
                    type = primitive:String
                }
                Attribute {
                    name = firstRun
                    type = primitive:Timestamp
                    lower = 0
                }
                Attribute {
                    name = runFrequency
                    type = jobs:Frequency
                }
                Attribute {
                    name = healthPerc
                    type = primitive:Integer
                    lower = 0
                }
                Attribute {
                    name = lastSuccess
                    type = primitive:Boolean
                    lower = 0
                }
                Attribute {
                    name = lastTime
                    type = primitive:Timestamp
                    lower = 0
                }
                Attribute {
                    name = results
                    type = jobs:JobResult
                    lower = 0
                    upper = {}
                    isComposite = true
                    opposite = jobs:JobResult/attributes:job
                }
            }
        }
        Class {
            name = JobResult
            attributes = {
                Attribute {
                    name = job
                    type = jobs:Job
                    opposite = jobs:Job/attributes:results
                }
                Attribute {
                    name = success
                    type = primitive:Boolean
                }
                Attribute {
                    name = startTime
                    type = primitive:Timestamp
                }
                Attribute {
                    name = endTime
                    type = primitive:Timestamp
                }
                Attribute {
                    name = log
                    type = primitive:String
                }
            }
        }
        Enumeration {
            name = Frequency
            literals = {
                Literal {
                    name = never
                }
                Literal {
                    name = hourly
                }
                Literal {
                    name = daily
                }
                Literal {
                    name = weekDays
                }
                Literal {
                    name = weekly
                }
                Literal {
                    name = monthly
                }
                Literal {
                    name = yearly
                }
            }
        }
    }
}
 